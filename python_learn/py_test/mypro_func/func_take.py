#函数中参数的传递

#1、可变对象的参数传递

a = [10,20]

def func_take01(m):
    print("m:",id(m))         #a和m为同一个对象
    m.append(30)              #a为列表，是可变对象，栈帧中不创建拷贝m=a，直接修改对象a的赋值

func_take01(a)
print("a:",id(a))
print(a)

'''运行结果
id（m）: 2731986145864
id（a）: 2731986145864
m和a为同一个对象'''

#2、不可变对象的参数传递

b = 100
print("b:",id(b))

def func_take02(n):
    print("n:",id(n))         #b为int不可变对象，n指向b的地址，id为140717007404384
    n = n + 200
    print("new(n):",id(n))    #n+200后，创建了新的拷贝，n为新的对象，id为3096628869008，赋值为n+200，因为b不可变，只能新建
    print(n)

func_take02(b)
print(id(b))                 #b为全局变量，地址不变，值也不变
print(b)

'''---------------------运行结果------------------
id(b):140717007404384
id(n):3096628869008
'''